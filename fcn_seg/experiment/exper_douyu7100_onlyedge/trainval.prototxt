layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "sem"
  top: "edgemap"
  python_param {
    module: "data_layers"
    layer: "Douyu1000SegDataLayer"
    param_str: "{\'data_dir\': \'../../data/douyu_7100\', \'seed\': 1337, \'split\': \'trainval5000\'}"
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "sem"
  top: "edgemap"
  python_param {
    module: "data_layers"
    layer: "Douyu1000SegDataLayer"
    param_str: "{\'data_dir\': \'../../data/douyu_7100\', \'seed\': 1337, \'split\': \'test5000\', \'flip\': 0, \'crop\': 0}"
  }
  include {
    phase: TEST
  }
}

layer {
  name: "conv1/7x7_s2"
  type: "Convolution"
  bottom: "data"
  top: "conv1/7x7_s2" #Top shape: 1 64 326 190
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad:9
    kernel_size: 7
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv1/relu_7x7"
  type: "ReLU"
  bottom: "conv1/7x7_s2"
  top: "conv1/7x7_s2" 
}
layer {
  name: "pool1/3x3_s2"
  type: "Pooling"
  bottom: "conv1/7x7_s2"
  top: "pool1/3x3_s2" #Top shape: 1 64 163 95
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "pool1/norm1"
  type: "LRN"
  bottom: "pool1/3x3_s2"
  top: "pool1/norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2/3x3_reduce"
  type: "Convolution"
  bottom: "pool1/norm1"
  top: "conv2/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv2/relu_3x3_reduce"
  type: "ReLU"
  bottom: "conv2/3x3_reduce"
  top: "conv2/3x3_reduce"
}
layer {
  name: "conv2/3x3"
  type: "Convolution"
  bottom: "conv2/3x3_reduce"
  top: "conv2/3x3" #Top shape: 1 192 163 95
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv2/relu_3x3"
  type: "ReLU"
  bottom: "conv2/3x3"
  top: "conv2/3x3"
}
layer {
  name: "conv2/norm2"
  type: "LRN"
  bottom: "conv2/3x3"
  top: "conv2/norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2/3x3_s2"
  type: "Pooling"
  bottom: "conv2/norm2"
  top: "pool2/3x3_s2" #Top shape: 1 192 81 47
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_3a/1x1"
  type: "Convolution"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/1x1" #Top shape: 1 64 81 47
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_1x1"
  type: "ReLU"
  bottom: "inception_3a/1x1"
  top: "inception_3a/1x1"
}
layer {
  name: "inception_3a/3x3_reduce"
  type: "Convolution"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/3x3_reduce" #Top shape: 1 96 81 47
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_3a/3x3_reduce"
  top: "inception_3a/3x3_reduce"
}
layer {
  name: "inception_3a/3x3"
  type: "Convolution"
  bottom: "inception_3a/3x3_reduce"
  top: "inception_3a/3x3" #Top shape: 1 128 81 47
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_3x3"
  type: "ReLU"
  bottom: "inception_3a/3x3"
  top: "inception_3a/3x3"
}
layer {
  name: "inception_3a/5x5_reduce"
  type: "Convolution"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/5x5_reduce" #Top shape: 1 16 81 47
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_3a/5x5_reduce"
  top: "inception_3a/5x5_reduce"
}
layer {
  name: "inception_3a/5x5"
  type: "Convolution"
  bottom: "inception_3a/5x5_reduce"
  top: "inception_3a/5x5" #Top shape: 1 32 81 47
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_5x5"
  type: "ReLU"
  bottom: "inception_3a/5x5"
  top: "inception_3a/5x5"
}
layer {
  name: "inception_3a/pool"
  type: "Pooling"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/pool" #Top shape: 1 192 81 47
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_3a/pool_proj"
  type: "Convolution"
  bottom: "inception_3a/pool"
  top: "inception_3a/pool_proj" #Top shape: 1 32 81 47
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_3a/pool_proj"
  top: "inception_3a/pool_proj"
}
layer {
  name: "inception_3a/output"
  type: "Concat"
  bottom: "inception_3a/1x1"
  bottom: "inception_3a/3x3"
  bottom: "inception_3a/5x5"
  bottom: "inception_3a/pool_proj"
  top: "inception_3a/output" #Top shape: 1 256 81 47
}
layer {
  name: "inception_3b/1x1"
  type: "Convolution"
  bottom: "inception_3a/output"
  top: "inception_3b/1x1" #Top shape: 1 128 81 47
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_1x1"
  type: "ReLU"
  bottom: "inception_3b/1x1"
  top: "inception_3b/1x1"
}
layer {
  name: "inception_3b/3x3_reduce"
  type: "Convolution"
  bottom: "inception_3a/output"
  top: "inception_3b/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_3b/3x3_reduce"
  top: "inception_3b/3x3_reduce"
}
layer {
  name: "inception_3b/3x3"
  type: "Convolution"
  bottom: "inception_3b/3x3_reduce"
  top: "inception_3b/3x3" #Top shape: 1 192 81 47
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_3x3"
  type: "ReLU"
  bottom: "inception_3b/3x3"
  top: "inception_3b/3x3"
}
layer {
  name: "inception_3b/5x5_reduce"
  type: "Convolution"
  bottom: "inception_3a/output"
  top: "inception_3b/5x5_reduce" #Top shape: 1 32 81 47
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_3b/5x5_reduce"
  top: "inception_3b/5x5_reduce"
}
layer {
  name: "inception_3b/5x5"
  type: "Convolution"
  bottom: "inception_3b/5x5_reduce"
  top: "inception_3b/5x5" #Top shape: 1 96 81 47
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_5x5"
  type: "ReLU"
  bottom: "inception_3b/5x5"
  top: "inception_3b/5x5"
}
layer {
  name: "inception_3b/pool"
  type: "Pooling"
  bottom: "inception_3a/output"
  top: "inception_3b/pool" #Top shape: 1 256 81 47
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_3b/pool_proj"
  type: "Convolution"
  bottom: "inception_3b/pool"
  top: "inception_3b/pool_proj" #Top shape: 1 64 81 47
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_3b/pool_proj"
  top: "inception_3b/pool_proj"
}
layer {
  name: "inception_3b/output"
  type: "Concat"
  bottom: "inception_3b/1x1"
  bottom: "inception_3b/3x3"
  bottom: "inception_3b/5x5"
  bottom: "inception_3b/pool_proj"
  top: "inception_3b/output" #Top shape: 1 480 81 47
}




layer {
  name: "score-inception_3b/output"
  type: "Convolution"
  bottom: "inception_3b/output"
  top: "score-inception_3b/output" #Top shape: 1 3 83 49
  param {
    lr_mult: 1
	decay_mult: 1
  }
  param {
	lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    pad:4 
    num_output: 2 
    kernel_size: 7
	engine: CAFFE
  }
} # 66 * 66

layer {
  name: "upsample"
  type: "Deconvolution"
  bottom: "score-inception_3b/output"
  top: "bigscore" #Top shape: 1 3 672 400
  param {
	lr_mult: 0
  }
  convolution_param {
	num_output: 2
	bias_term: false
	kernel_size: 16
	stride: 8
  }
} # 536 * 536

layer { 
  name: 'score' 
  type: 'Crop' 
  bottom: "bigscore"
  bottom: 'data' 
  top: 'score' #Top shape: 1 3 640 368
	crop_param {
	  offset: 12
  }
} # 500 * 500

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "score"
  bottom: "sem"
  top: "loss"
  loss_weight: 1.0
  loss_param {
    ignore_label: 255
    normalize: true
  }
}


###############################################
###############################################
############     edge
###############################################
###############################################


layer {
  name: "score/slice"
  type: "Slice"
  bottom: "score"
  top: "score/slice_1"
  top: "score/slice_2"
  slice_param {
    axis: 1
    slice_point: 1
  }
}
layer {
  name: "score/slice_1/sobelx"
  type: "Convolution"
  bottom: "score/slice_1"
  top: "score/slice_1/sobelx" 
  param {
    lr_mult: 0
  }
  convolution_param {
    pad:1 
    num_output: 1 
    kernel_size: 3
  }
}
layer {
  name: "score/slice_1/sobelx/abs"
  bottom: "score/slice_1/sobelx"
  top: "score/slice_1/sobelx/abs"
  type: "AbsVal"
}
layer {
  name: "score/slice_1/sobely"
  type: "Convolution"
  bottom: "score/slice_1"
  top: "score/slice_1/sobely" 
  param {
    lr_mult: 0
  }
  convolution_param {
    pad:1 
    num_output: 1 
    kernel_size: 3
  }
}
layer {
  name: "score/slice_1/sobely/abs"
  bottom: "score/slice_1/sobely"
  top: "score/slice_1/sobely/abs"
  type: "AbsVal"
}
layer {
  name: "score/slice_2/sobelx"
  type: "Convolution"
  bottom: "score/slice_2"
  top: "score/slice_2/sobelx" 
  param {
    lr_mult: 0
  }
  convolution_param {
    pad:1 
    num_output: 1 
    kernel_size: 3
  }
}
layer {
  name: "score/slice_2/sobelx/abs"
  bottom: "score/slice_2/sobelx"
  top: "score/slice_2/sobelx/abs"
  type: "AbsVal"
}
layer {
  name: "score/slice_2/sobely"
  type: "Convolution"
  bottom: "score/slice_2"
  top: "score/slice_2/sobely" 
  param {
    lr_mult: 0
  }
  convolution_param {
    pad:1 
    num_output: 1 
    kernel_size: 3
  }
}
layer {
  name: "score/slice_2/sobely/abs"
  bottom: "score/slice_2/sobely"
  top: "score/slice_2/sobely/abs"
  type: "AbsVal"
}
layer 
{
  name: "score/slice_1/eltwise"
  type: "Eltwise"
  bottom: "score/slice_1/sobelx/abs"
  bottom: "score/slice_1/sobely/abs"
  top: "score/slice_1/eltwise"
  eltwise_param {
    operation: SUM
  }
}
layer 
{
  name: "score/slice_2/eltwise"
  type: "Eltwise"
  bottom: "score/slice_2/sobelx/abs"
  bottom: "score/slice_2/sobely/abs"
  top: "score/slice_2/eltwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "score/sobel/concat"
  type: "Concat"
  bottom: "score/slice_1/eltwise"
  bottom: "score/slice_2/eltwise"
  top: "score/sobel/concat" 
}
layer {
  name: "loss/edge/sobel"
  type: "SoftmaxWithLoss"
  bottom: "score/sobel/concat"
  bottom: "edgemap"
  top: "loss/edge/sobel"
  loss_weight: 0.0
  loss_param {
    ignore_label: 255
    normalize: true
  }
}


layer {
  name: "score-inception_3b/output/edge"
  type: "Convolution"
  bottom: "inception_3b/output"
  top: "score-inception_3b/output/edge" #Top shape: 1 3 83 49
  param {
    lr_mult: 1
	decay_mult: 1
  }
  param {
	lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    pad:4 
    num_output: 2 
    kernel_size: 7
	engine: CAFFE
  }
} # 66 * 66


layer {
  name: "upsample/edge"
  type: "Deconvolution"
  bottom: "score-inception_3b/output/edge"
  top: "bigscore/edge" #Top shape: 1 3 672 400
  param {
	lr_mult: 0
  }
  convolution_param {
	num_output: 2
	bias_term: false
	kernel_size: 16
	stride: 8
  }
} # 536 * 536

layer { 
  name: 'score/edge' 
  type: 'Crop' 
  bottom: "bigscore/edge"
  bottom: 'data' 
  top: 'score/edge' #Top shape: 1 3 640 368
	crop_param {
	  offset: 12
  }
} # 500 * 500

layer {
  name: "loss/edge"
  type: "SoftmaxWithLoss"
  bottom: "score/edge"
  bottom: "edgemap"
  top: "loss/edge"
  loss_weight: 0.0
  loss_param {
    ignore_label: 255
    normalize: true
  }
}

###############################################
###############################################
############     edge  end
###############################################
###############################################